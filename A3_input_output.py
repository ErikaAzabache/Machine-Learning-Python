# -*- coding: utf-8 -*-
"""Assignment_3_Input_Output.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1b6D_ye6OPblOi1DsrnGaHpMioJN59JWc

# Import packages
"""

from google.colab import drive, auth
auth.authenticate_user()
import requests
gcloud_token = !gcloud auth print-access-token
drive.mount('/content/drive', force_remount=True)

with open('/content/drive/My Drive/Colab Notebooks/Assignment_3_Script.py') as infile:
    exec(infile.read())

"""# Set file & check sheets"""

excelfile = '/content/drive/My Drive/Data/Assignment_3_ Submission_Template.xlsx'

"""# Actual work

| Variable name | Description       
| :- |:-------------
|mu | Overall mean vector  <br>
| v1 | Eigenvector 1 <br>
| v2 | Eigenvector 2 <br>
| Np | Sample size of positive class <br>
| Nn | Sample size of negative class <br>
| mup | Bayesian classifier: Mean vector of positive class  <br>
| mun | Bayesian classifier: Mean vector of negative class <br>
| cp | Bayesian Classifier: Cov. matrix of positive class <br>
| cn | Bayesian Classifier: Cov. matrix of negative class <br>
| p1min | Histogram Classifier: min of first prin. comp. <br>
| p1max | Histogram Classifier: max of first prin. comp. <br>
| p2min | Histogram Classifier: min of second prin. comp. <br>
| p2max | Histogram Classifier: max of second prin. comp. <br>
| Hp | Histogram Classifier: Histogram of positive class <br>
| Hn | Histogram Classifier: Histogram of negative class <br>
| xp | Random positive class vector from testing set <br>
| zp | Mean subtracted version of xp <br>
| pp | 2D approximation of zp <br>
| rp | Reconstructed version of zp <br>
| xrecp | Reconstructed version of xp <br>
| xn | Random negative class vector from testing set <br>
| zn | Mean subtracted version of xn <br>
| pn | 2D approximation of zn <br>
| rn | Reconstructed version of zn <br>
| xrecn | Reconstructed version of xn <br>
| truthp | Actual positive class label <br>
| resultlabelHp | Class label obtained by querying xp using histograms <br>
| resultprobHp | Probability associated with querying xp using histograms <br>
| resultlabelBp | Class label obtained by querying xp using Bayesian model  <br>
| resultprobBp | Probability associated with querying xp using Bayesian model <br>
| truthn | Actual negative class label <br>
| resultlabelHn | Class label obtained by querying xn using histograms <br>
| resultprobHn | Probability associated with querying xn using histograms <br>
| resultlabelBn | Class label obtained by querying xn using Bayesian model  <br>
| resultprobBn | Probability associated with querying xn using Bayesian model <br>
| accuracyH | Accuracy of the histogram classifier measured on the testing set <br>
| accuracyB  | Accuracy of the Bayesian classifier measured on the testing set
"""

check_all_vars(all_vars)

"""# Save results

##### Keep the Excel file CLOSED while executing the following
"""

check_all_vars(all_vars)

writeExcelData([mu],excelfile,'Results',2,2)
writeExcelData([v1],excelfile,'Results',3,2)
writeExcelData([v2],excelfile,'Results',4,2)
print("Written mu, v1, v2")

writeExcelData([Np,Nn],excelfile,'Results',6,2)
print("Written Np, Nn")

writeExcelData([mup,mun],excelfile,'Results',9,2)
print("Written mup, mun")

writeExcelData(cp,excelfile,'Results',12,2)
writeExcelData(cn,excelfile,'Results',14,2)
print("Written cp, cn")

writeExcelData([[p1min,p1max]],excelfile,'Results',17,2)
writeExcelData([[p2min,p2max]],excelfile,'Results',18,2)
print("Written p1min, p1max, p2min, p2max")

writeExcelData(Hp,excelfile,'Results',20,2)
writeExcelData(Hn,excelfile,'Results',53,2)
print("Written Hp, Hn")

writeExcelData([xp],excelfile,'Results',88,2)
writeExcelData([zp],excelfile,'Results',89,2)
writeExcelData([pp],excelfile,'Results',90,2)
writeExcelData([rp],excelfile,'Results',91,2)
writeExcelData([xrecp],excelfile,'Results',92,2)
print("Written xp, zp, rp, pp, xrecp")

writeExcelData([xn],excelfile,'Results',94,2)
writeExcelData([zn],excelfile,'Results',95,2)
writeExcelData([pn],excelfile,'Results',96,2)
writeExcelData([rn],excelfile,'Results',97,2)
writeExcelData([xrecn],excelfile,'Results',98,2)
print("Written xn, zn, rn, pn, xrecn")

writeExcelData([truthp],excelfile,'Results',102,2)
writeExcelData([resultlabelHp],excelfile,'Results',103,2)
writeExcelData([resultprobHp],excelfile,'Results',103,3)
writeExcelData([resultlabelBp],excelfile,'Results',104,2)
writeExcelData([resultprobBp],excelfile,'Results',104,3)
print("Written truthp, resultlabelHp, resultprobHp, resultlabelBp, resultprobBp")

writeExcelData([truthn],excelfile,'Results',106,2)
writeExcelData([resultlabelHn],excelfile,'Results',107,2)
writeExcelData([resultprobHn],excelfile,'Results',107,3)
writeExcelData([resultlabelBn],excelfile,'Results',108,2)
writeExcelData([resultprobBn],excelfile,'Results',108,3)
print("Written truthn, resultlabelHn, resultprobHn, resultlabelBn, resultprobBn")

writeExcelData([accuracyH,accuracyB],excelfile,'Results',111,2)
print("Written accuracyH, accuracyB")

closeExcelFile(excelfile)

print("Written everything!")

